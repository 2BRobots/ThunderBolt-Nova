;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/08/2017 07:49:09 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF008EF15  	GOTO        4138
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF008EFBB  	GOTO        4470
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_bootInterrupt:
;Timer_Interrupts_for_servos.c,99 :: 		void bootInterrupt()    //tabla de saltos para poder activar interrupciones usando un bootloader, manda llamar interrupciones y al main segun correponda
;Timer_Interrupts_for_servos.c,102 :: 		goto _main
0x1000	0xF008EF15  	GOTO        _main
;Timer_Interrupts_for_servos.c,103 :: 		goto 0
0x1004	0xF000EF00  	GOTO        0
;Timer_Interrupts_for_servos.c,104 :: 		goto _interrupt
0x1008	0xF008EFBB  	GOTO        _interrupt
;Timer_Interrupts_for_servos.c,106 :: 		}
L_end_bootInterrupt:
0x100C	0x0012      	RETURN      0
; end of _bootInterrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x100E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x1010	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x1014	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x1016	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x1018	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x101A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x101C	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x102A	0x6A18      	CLRF        _ServoC4 
0x102C	0x6A19      	CLRF        25 
0x102E	0x6A1A      	CLRF        _ServoC5 
0x1030	0x6A1B      	CLRF        27 
0x1032	0x6A1C      	CLRF        _i 
0x1034	0x6A1D      	CLRF        29 
0x1036	0x6A1E      	CLRF        _pulso 
0x1038	0x6A1F      	CLRF        31 
;Timer_Interrupts_for_servos.c,46 :: 		void main()
;Timer_Interrupts_for_servos.c,48 :: 		TRISA= 0b00001000;
0x103A	0x0E08      	MOVLW       8
0x103C	0x6E92      	MOVWF       TRISA 
;Timer_Interrupts_for_servos.c,49 :: 		TRISB= 0b00000000;
0x103E	0x6A93      	CLRF        TRISB 
;Timer_Interrupts_for_servos.c,50 :: 		TRISC= 0b00000000;
0x1040	0x6A94      	CLRF        TRISC 
;Timer_Interrupts_for_servos.c,52 :: 		LATA = 0;
0x1042	0x6A89      	CLRF        LATA 
;Timer_Interrupts_for_servos.c,53 :: 		LATB = 0;
0x1044	0x6A8A      	CLRF        LATB 
;Timer_Interrupts_for_servos.c,54 :: 		LATC = 0;
0x1046	0x6A8B      	CLRF        LATC 
;Timer_Interrupts_for_servos.c,56 :: 		T0CON = 0b00000001;
0x1048	0x0E01      	MOVLW       1
0x104A	0x6ED5      	MOVWF       T0CON 
;Timer_Interrupts_for_servos.c,57 :: 		TMR0H   = 0x15;
0x104C	0x0E15      	MOVLW       21
0x104E	0x6ED7      	MOVWF       TMR0H 
;Timer_Interrupts_for_servos.c,58 :: 		TMR0L   = 0xA0;
0x1050	0x0EA0      	MOVLW       160
0x1052	0x6ED6      	MOVWF       TMR0L 
;Timer_Interrupts_for_servos.c,59 :: 		INTCON = 0b11100000;
0x1054	0x0EE0      	MOVLW       224
0x1056	0x6EF2      	MOVWF       INTCON 
;Timer_Interrupts_for_servos.c,60 :: 		RCON.f7 = 0;
0x1058	0x9ED0      	BCF         RCON, 7 
;Timer_Interrupts_for_servos.c,61 :: 		T0CON.f7 = 1;
0x105A	0x8ED5      	BSF         T0CON, 7 
;Timer_Interrupts_for_servos.c,63 :: 		while(1)
L_main11:
;Timer_Interrupts_for_servos.c,65 :: 		if (PORTA.f3 == 0) //este if verifica si el boton se presiona
0x105C	0xB680      	BTFSC       PORTA, 3 
0x105E	0xD002      	BRA         L_main13
;Timer_Interrupts_for_servos.c,67 :: 		asm goto 0x30   //saltar al bootloader para reprogramacion
0x1060	0xF000EF18  	GOTO        48
;Timer_Interrupts_for_servos.c,68 :: 		}
L_main13:
;Timer_Interrupts_for_servos.c,69 :: 		delay_ms(100);
0x1064	0x0E07      	MOVLW       7
0x1066	0x6E0B      	MOVWF       R11, 0
0x1068	0x0E17      	MOVLW       23
0x106A	0x6E0C      	MOVWF       R12, 0
0x106C	0x0E6A      	MOVLW       106
0x106E	0x6E0D      	MOVWF       R13, 0
L_main14:
0x1070	0x2E0D      	DECFSZ      R13, 1, 0
0x1072	0xD7FE      	BRA         L_main14
0x1074	0x2E0C      	DECFSZ      R12, 1, 0
0x1076	0xD7FC      	BRA         L_main14
0x1078	0x2E0B      	DECFSZ      R11, 1, 0
0x107A	0xD7FA      	BRA         L_main14
0x107C	0x0000      	NOP
;Timer_Interrupts_for_servos.c,71 :: 		for(i = 0; i<=180;i++)
0x107E	0x6A1C      	CLRF        _i 
0x1080	0x6A1D      	CLRF        _i+1 
L_main15:
0x1082	0x0E80      	MOVLW       128
0x1084	0x6E00      	MOVWF       R0 
0x1086	0x0E80      	MOVLW       128
0x1088	0x181D      	XORWF       _i+1, 0 
0x108A	0x5C00      	SUBWF       R0, 0 
0x108C	0xE102      	BNZ         L__main36
0x108E	0x501C      	MOVF        _i, 0 
0x1090	0x08B4      	SUBLW       180
L__main36:
0x1092	0xE310      	BNC         L_main16
;Timer_Interrupts_for_servos.c,73 :: 		ServoC5 = i;
0x1094	0xF01AC01C  	MOVFF       _i, _ServoC5
0x1098	0xF01BC01D  	MOVFF       _i+1, _ServoC5+1
;Timer_Interrupts_for_servos.c,74 :: 		delay_ms(1);
0x109C	0x0E10      	MOVLW       16
0x109E	0x6E0C      	MOVWF       R12, 0
0x10A0	0x0E94      	MOVLW       148
0x10A2	0x6E0D      	MOVWF       R13, 0
L_main18:
0x10A4	0x2E0D      	DECFSZ      R13, 1, 0
0x10A6	0xD7FE      	BRA         L_main18
0x10A8	0x2E0C      	DECFSZ      R12, 1, 0
0x10AA	0xD7FC      	BRA         L_main18
0x10AC	0x0000      	NOP
;Timer_Interrupts_for_servos.c,71 :: 		for(i = 0; i<=180;i++)
0x10AE	0x4A1C      	INFSNZ      _i, 1 
0x10B0	0x2A1D      	INCF        _i+1, 1 
;Timer_Interrupts_for_servos.c,75 :: 		}
0x10B2	0xD7E7      	BRA         L_main15
L_main16:
;Timer_Interrupts_for_servos.c,77 :: 		for(i = 0; i<=180;i++)
0x10B4	0x6A1C      	CLRF        _i 
0x10B6	0x6A1D      	CLRF        _i+1 
L_main19:
0x10B8	0x0E80      	MOVLW       128
0x10BA	0x6E00      	MOVWF       R0 
0x10BC	0x0E80      	MOVLW       128
0x10BE	0x181D      	XORWF       _i+1, 0 
0x10C0	0x5C00      	SUBWF       R0, 0 
0x10C2	0xE102      	BNZ         L__main37
0x10C4	0x501C      	MOVF        _i, 0 
0x10C6	0x08B4      	SUBLW       180
L__main37:
0x10C8	0xE313      	BNC         L_main20
;Timer_Interrupts_for_servos.c,79 :: 		ServoC4 = i;
0x10CA	0xF018C01C  	MOVFF       _i, _ServoC4
0x10CE	0xF019C01D  	MOVFF       _i+1, _ServoC4+1
;Timer_Interrupts_for_servos.c,80 :: 		delay_ms(20);
0x10D2	0x0E02      	MOVLW       2
0x10D4	0x6E0B      	MOVWF       R11, 0
0x10D6	0x0E38      	MOVLW       56
0x10D8	0x6E0C      	MOVWF       R12, 0
0x10DA	0x0EAD      	MOVLW       173
0x10DC	0x6E0D      	MOVWF       R13, 0
L_main22:
0x10DE	0x2E0D      	DECFSZ      R13, 1, 0
0x10E0	0xD7FE      	BRA         L_main22
0x10E2	0x2E0C      	DECFSZ      R12, 1, 0
0x10E4	0xD7FC      	BRA         L_main22
0x10E6	0x2E0B      	DECFSZ      R11, 1, 0
0x10E8	0xD7FA      	BRA         L_main22
;Timer_Interrupts_for_servos.c,77 :: 		for(i = 0; i<=180;i++)
0x10EA	0x4A1C      	INFSNZ      _i, 1 
0x10EC	0x2A1D      	INCF        _i+1, 1 
;Timer_Interrupts_for_servos.c,81 :: 		}
0x10EE	0xD7E4      	BRA         L_main19
L_main20:
;Timer_Interrupts_for_servos.c,83 :: 		for(i = 180; i>=0;i--)
0x10F0	0x0EB4      	MOVLW       180
0x10F2	0x6E1C      	MOVWF       _i 
0x10F4	0x0E00      	MOVLW       0
0x10F6	0x6E1D      	MOVWF       _i+1 
L_main23:
0x10F8	0x0E80      	MOVLW       128
0x10FA	0x181D      	XORWF       _i+1, 0 
0x10FC	0x6E00      	MOVWF       R0 
0x10FE	0x0E80      	MOVLW       128
0x1100	0x5C00      	SUBWF       R0, 0 
0x1102	0xE102      	BNZ         L__main38
0x1104	0x0E00      	MOVLW       0
0x1106	0x5C1C      	SUBWF       _i, 0 
L__main38:
0x1108	0xE312      	BNC         L_main24
;Timer_Interrupts_for_servos.c,85 :: 		ServoC5 = i;
0x110A	0xF01AC01C  	MOVFF       _i, _ServoC5
0x110E	0xF01BC01D  	MOVFF       _i+1, _ServoC5+1
;Timer_Interrupts_for_servos.c,86 :: 		delay_ms(1);
0x1112	0x0E10      	MOVLW       16
0x1114	0x6E0C      	MOVWF       R12, 0
0x1116	0x0E94      	MOVLW       148
0x1118	0x6E0D      	MOVWF       R13, 0
L_main26:
0x111A	0x2E0D      	DECFSZ      R13, 1, 0
0x111C	0xD7FE      	BRA         L_main26
0x111E	0x2E0C      	DECFSZ      R12, 1, 0
0x1120	0xD7FC      	BRA         L_main26
0x1122	0x0000      	NOP
;Timer_Interrupts_for_servos.c,83 :: 		for(i = 180; i>=0;i--)
0x1124	0x0E01      	MOVLW       1
0x1126	0x5E1C      	SUBWF       _i, 1 
0x1128	0x0E00      	MOVLW       0
0x112A	0x5A1D      	SUBWFB      _i+1, 1 
;Timer_Interrupts_for_servos.c,87 :: 		}
0x112C	0xD7E5      	BRA         L_main23
L_main24:
;Timer_Interrupts_for_servos.c,89 :: 		for(i = 180; i>=0;i--)
0x112E	0x0EB4      	MOVLW       180
0x1130	0x6E1C      	MOVWF       _i 
0x1132	0x0E00      	MOVLW       0
0x1134	0x6E1D      	MOVWF       _i+1 
L_main27:
0x1136	0x0E80      	MOVLW       128
0x1138	0x181D      	XORWF       _i+1, 0 
0x113A	0x6E00      	MOVWF       R0 
0x113C	0x0E80      	MOVLW       128
0x113E	0x5C00      	SUBWF       R0, 0 
0x1140	0xE102      	BNZ         L__main39
0x1142	0x0E00      	MOVLW       0
0x1144	0x5C1C      	SUBWF       _i, 0 
L__main39:
0x1146	0xE315      	BNC         L_main28
;Timer_Interrupts_for_servos.c,91 :: 		ServoC4 = i;
0x1148	0xF018C01C  	MOVFF       _i, _ServoC4
0x114C	0xF019C01D  	MOVFF       _i+1, _ServoC4+1
;Timer_Interrupts_for_servos.c,92 :: 		delay_ms(20);
0x1150	0x0E02      	MOVLW       2
0x1152	0x6E0B      	MOVWF       R11, 0
0x1154	0x0E38      	MOVLW       56
0x1156	0x6E0C      	MOVWF       R12, 0
0x1158	0x0EAD      	MOVLW       173
0x115A	0x6E0D      	MOVWF       R13, 0
L_main30:
0x115C	0x2E0D      	DECFSZ      R13, 1, 0
0x115E	0xD7FE      	BRA         L_main30
0x1160	0x2E0C      	DECFSZ      R12, 1, 0
0x1162	0xD7FC      	BRA         L_main30
0x1164	0x2E0B      	DECFSZ      R11, 1, 0
0x1166	0xD7FA      	BRA         L_main30
;Timer_Interrupts_for_servos.c,89 :: 		for(i = 180; i>=0;i--)
0x1168	0x0E01      	MOVLW       1
0x116A	0x5E1C      	SUBWF       _i, 1 
0x116C	0x0E00      	MOVLW       0
0x116E	0x5A1D      	SUBWFB      _i+1, 1 
;Timer_Interrupts_for_servos.c,93 :: 		}
0x1170	0xD7E2      	BRA         L_main27
L_main28:
;Timer_Interrupts_for_servos.c,96 :: 		}
0x1172	0xD774      	BRA         L_main11
;Timer_Interrupts_for_servos.c,97 :: 		}
L_end_main:
0x1174	0xD7FF      	BRA         $+0
; end of _main
_interrupt:
;Timer_Interrupts_for_servos.c,14 :: 		void interrupt()
0x1176	0xF017C000  	MOVFF       R0, 23
0x117A	0xF016C00C  	MOVFF       R12, 22
0x117E	0xF015C00D  	MOVFF       R13, 21
;Timer_Interrupts_for_servos.c,16 :: 		if (INTCON.f2 == 1) //si se desborda el timer y acciona la interrupcion
0x1182	0xA4F2      	BTFSS       INTCON, 2 
0x1184	0xD048      	BRA         L_interrupt0
;Timer_Interrupts_for_servos.c,18 :: 		T0CON.f7 = 0;
0x1186	0x9ED5      	BCF         T0CON, 7 
;Timer_Interrupts_for_servos.c,19 :: 		INTCON.f2 = 0;
0x1188	0x94F2      	BCF         INTCON, 2 
;Timer_Interrupts_for_servos.c,20 :: 		TMR0H   = 0x15;
0x118A	0x0E15      	MOVLW       21
0x118C	0x6ED7      	MOVWF       TMR0H 
;Timer_Interrupts_for_servos.c,21 :: 		TMR0L   = 0xA0;
0x118E	0x0EA0      	MOVLW       160
0x1190	0x6ED6      	MOVWF       TMR0L 
;Timer_Interrupts_for_servos.c,22 :: 		LATB.f7 = !LATB.f7; //parpadea led verde "st"  indicando que esta ocurriendo la interrupcion
0x1192	0x7E8A      	BTG         LATB, 7 
;Timer_Interrupts_for_servos.c,24 :: 		ServoPin1 = 1;
0x1194	0x8A8B      	BSF         LATC, 5 
;Timer_Interrupts_for_servos.c,25 :: 		delay_us(600);
0x1196	0x0E0A      	MOVLW       10
0x1198	0x6E0C      	MOVWF       R12, 0
0x119A	0x0E58      	MOVLW       88
0x119C	0x6E0D      	MOVWF       R13, 0
L_interrupt1:
0x119E	0x2E0D      	DECFSZ      R13, 1, 0
0x11A0	0xD7FE      	BRA         L_interrupt1
0x11A2	0x2E0C      	DECFSZ      R12, 1, 0
0x11A4	0xD7FC      	BRA         L_interrupt1
0x11A6	0x0000      	NOP
;Timer_Interrupts_for_servos.c,26 :: 		for(pulso = 0; pulso <= ServoC5; pulso++)
0x11A8	0x6A1E      	CLRF        _pulso 
0x11AA	0x6A1F      	CLRF        _pulso+1 
L_interrupt2:
0x11AC	0x0E80      	MOVLW       128
0x11AE	0x181B      	XORWF       _ServoC5+1, 0 
0x11B0	0x6E00      	MOVWF       R0 
0x11B2	0x0E80      	MOVLW       128
0x11B4	0x181F      	XORWF       _pulso+1, 0 
0x11B6	0x5C00      	SUBWF       R0, 0 
0x11B8	0xE102      	BNZ         L__interrupt33
0x11BA	0x501E      	MOVF        _pulso, 0 
0x11BC	0x5C1A      	SUBWF       _ServoC5, 0 
L__interrupt33:
0x11BE	0xE309      	BNC         L_interrupt3
;Timer_Interrupts_for_servos.c,28 :: 		delay_us(9);
0x11C0	0x0E23      	MOVLW       35
0x11C2	0x6E0D      	MOVWF       R13, 0
L_interrupt5:
0x11C4	0x2E0D      	DECFSZ      R13, 1, 0
0x11C6	0xD7FE      	BRA         L_interrupt5
0x11C8	0x0000      	NOP
0x11CA	0x0000      	NOP
;Timer_Interrupts_for_servos.c,26 :: 		for(pulso = 0; pulso <= ServoC5; pulso++)
0x11CC	0x4A1E      	INFSNZ      _pulso, 1 
0x11CE	0x2A1F      	INCF        _pulso+1, 1 
;Timer_Interrupts_for_servos.c,29 :: 		}
0x11D0	0xD7ED      	BRA         L_interrupt2
L_interrupt3:
;Timer_Interrupts_for_servos.c,30 :: 		ServoPin1 = 0;
0x11D2	0x9A8B      	BCF         LATC, 5 
;Timer_Interrupts_for_servos.c,32 :: 		ServoPin2 = 1;
0x11D4	0x888B      	BSF         LATC, 4 
;Timer_Interrupts_for_servos.c,33 :: 		delay_us(600);
0x11D6	0x0E0A      	MOVLW       10
0x11D8	0x6E0C      	MOVWF       R12, 0
0x11DA	0x0E58      	MOVLW       88
0x11DC	0x6E0D      	MOVWF       R13, 0
L_interrupt6:
0x11DE	0x2E0D      	DECFSZ      R13, 1, 0
0x11E0	0xD7FE      	BRA         L_interrupt6
0x11E2	0x2E0C      	DECFSZ      R12, 1, 0
0x11E4	0xD7FC      	BRA         L_interrupt6
0x11E6	0x0000      	NOP
;Timer_Interrupts_for_servos.c,34 :: 		for(pulso = 0; pulso <= ServoC4; pulso++)
0x11E8	0x6A1E      	CLRF        _pulso 
0x11EA	0x6A1F      	CLRF        _pulso+1 
L_interrupt7:
0x11EC	0x0E80      	MOVLW       128
0x11EE	0x1819      	XORWF       _ServoC4+1, 0 
0x11F0	0x6E00      	MOVWF       R0 
0x11F2	0x0E80      	MOVLW       128
0x11F4	0x181F      	XORWF       _pulso+1, 0 
0x11F6	0x5C00      	SUBWF       R0, 0 
0x11F8	0xE102      	BNZ         L__interrupt34
0x11FA	0x501E      	MOVF        _pulso, 0 
0x11FC	0x5C18      	SUBWF       _ServoC4, 0 
L__interrupt34:
0x11FE	0xE309      	BNC         L_interrupt8
;Timer_Interrupts_for_servos.c,36 :: 		delay_us(9);
0x1200	0x0E23      	MOVLW       35
0x1202	0x6E0D      	MOVWF       R13, 0
L_interrupt10:
0x1204	0x2E0D      	DECFSZ      R13, 1, 0
0x1206	0xD7FE      	BRA         L_interrupt10
0x1208	0x0000      	NOP
0x120A	0x0000      	NOP
;Timer_Interrupts_for_servos.c,34 :: 		for(pulso = 0; pulso <= ServoC4; pulso++)
0x120C	0x4A1E      	INFSNZ      _pulso, 1 
0x120E	0x2A1F      	INCF        _pulso+1, 1 
;Timer_Interrupts_for_servos.c,37 :: 		}
0x1210	0xD7ED      	BRA         L_interrupt7
L_interrupt8:
;Timer_Interrupts_for_servos.c,38 :: 		ServoPin2 = 0;
0x1212	0x988B      	BCF         LATC, 4 
;Timer_Interrupts_for_servos.c,40 :: 		T0CON.f7 = 1;
0x1214	0x8ED5      	BSF         T0CON, 7 
;Timer_Interrupts_for_servos.c,41 :: 		}
L_interrupt0:
;Timer_Interrupts_for_servos.c,42 :: 		}
L_end_interrupt:
L__interrupt32:
0x1216	0xF000C017  	MOVFF       23, R0
0x121A	0xF00CC016  	MOVFF       22, R12
0x121E	0xF00DC015  	MOVFF       21, R13
0x1222	0x0011      	RETFIE      1
; end of _interrupt
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x1000      [14]    _bootInterrupt
0x100E      [16]    ___CC2DW
0x102A     [332]    _main
0x1176     [174]    _interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_USB_genHID_P18K50_?FLOC____Lib_USB_genHID_P18K50_USB_Handle_BusyT1
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Write_16_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_16_SaveINTCON_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    __Lib_USB_genHID_P18K50_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    memmove_tt_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    R3
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    __Lib_USB_genHID_P18K50_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [2]    __Lib_USB_genHID_P18K50_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0004       [1]    __Lib_USB_genHID_P18K50_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_USB_genHID_P18K50_USB_Transfer_Packet_handle_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_USB_genHID_P18K50_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    __Lib_USB_genHID_P18K50_USB_Get_Status_Handler_p_L2
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    R5
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0006       [2]    __Lib_USB_genHID_P18K50_GetMaxIndexInConfigDsc_totalLen_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [3]    __Lib_USB_genHID_P18K50_GetMaxIndexInConfigDsc_ptr_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0018       [2]    _ServoC4
0x001A       [2]    _ServoC5
0x001C       [2]    _i
0x001E       [2]    _pulso
0x0F80       [1]    PORTA
0x0F89       [1]    LATA
0x0F8A       [1]    LATB
0x0F8B       [1]    LATC
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
